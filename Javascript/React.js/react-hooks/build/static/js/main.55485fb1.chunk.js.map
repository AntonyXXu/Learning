{"version":3,"sources":["components/Button.js","components/Header.js","components/IndividualTask.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","className","style","backgroundColor","defaultProps","Header","title","onAddButton","showAdd","IndividualTask","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","taskList","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTasks","setShowAddTasks","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.55485fb1.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n  return (\r\n    <button\r\n      className=\"btn\"\r\n      style={{ backgroundColor: color }}\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: \"steelblue\",\r\n};\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","//optional\r\nimport React from \"react\";\r\nimport Button from \"./Button\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Header = ({ title, onAddButton, showAdd }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>{title}</h1>\r\n      <Button\r\n        color={showAdd ? \"red\" : \"green\"}\r\n        text={showAdd ? \"Close Add Button\" : \"Show Add Button\"}\r\n        onClick={onAddButton}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"task tracker\",\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from \"react-icons/fa\";\r\nconst IndividualTask = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{\" \"}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={onDelete}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default IndividualTask;\r\n","//import { useState } from \"react\";\r\nimport IndividualTask from \"./IndividualTask\";\r\nconst Tasks = ({ taskList, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {taskList.map((task) => (\r\n        <IndividualTask\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={() => onDelete(task.id)}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n    onAdd({ text, day, reminder });\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTasks, setShowAddTasks] = useState(true);\n  const [taskList, setTasks] = useState([\n    {\n      id: 1,\n      text: \"task1\",\n      day: \"1\",\n      reminder: true,\n    },\n    {\n      id: 2,\n      text: \"task2\",\n      day: \"2\",\n      reminder: true,\n    },\n    {\n      id: 3,\n      text: \"task3\",\n      day: \"3\",\n      reminder: false,\n    },\n    {\n      id: 4,\n      text: \"task4\",\n      day: \"4\",\n      reminder: true,\n    },\n  ]);\n\n  //delete tasks\n  const deleteTask = (id) => {\n    setTasks(taskList.filter((task) => task.id !== id));\n  };\n\n  //toggle reminder to true/false\n  const toggleReminder = (id) => {\n    setTasks(\n      taskList.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  //AddTask function\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n    setTasks([...taskList, newTask]);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header\n        onAddButton={() => setShowAddTasks(!showAddTasks)}\n        showAdd={showAddTasks}\n      />\n      {showAddTasks && <AddTask onAdd={addTask} />}\n      {taskList.length > 0 ? (\n        <Tasks\n          taskList={taskList}\n          onDelete={deleteTask}\n          onToggle={toggleReminder}\n        />\n      ) : (\n        \"No Tasks\"\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}